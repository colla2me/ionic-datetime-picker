{
  "_args": [
    [
      {
        "raw": "better-scroll",
        "scope": null,
        "escapedName": "better-scroll",
        "name": "better-scroll",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\dev\\sidemenu"
    ]
  ],
  "_from": "better-scroll@latest",
  "_id": "better-scroll@0.4.0",
  "_inCache": true,
  "_location": "/better-scroll",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/better-scroll-0.4.0.tgz_1499792480664_0.969286821782589"
  },
  "_npmUser": {
    "name": "ustbhuangyi",
    "email": "ustbhuangyi@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "better-scroll",
    "scope": null,
    "escapedName": "better-scroll",
    "name": "better-scroll",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/better-scroll/-/better-scroll-0.4.0.tgz",
  "_shasum": "f3449f07a7df1c1e462ba86158a327071fd5c063",
  "_shrinkwrap": null,
  "_spec": "better-scroll",
  "_where": "E:\\dev\\sidemenu",
  "author": {
    "name": "huangyi",
    "email": "ustbhuangyi@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ustbhuangyi/better-scroll/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.0.0"
  },
  "description": "inspired by iscroll, and it has a better scroll perfermance",
  "devDependencies": {
    "babel-core": "^6.9.1",
    "babel-eslint": "^6.1.2",
    "babel-loader": "^6.2.4",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-plugin-transform-es2015-modules-umd": "^6.12.0",
    "babel-plugin-transform-runtime": "^6.9.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-stage-2": "^6.5.0",
    "eslint": "^2.10.2",
    "eslint-config-standard": "^5.1.0",
    "eslint-friendly-formatter": "^2.0.5",
    "eslint-loader": "^1.3.0",
    "eslint-plugin-html": "^1.3.0",
    "eslint-plugin-promise": "^1.0.8",
    "eslint-plugin-standard": "^1.3.2",
    "rollup": "^0.43.0",
    "rollup-plugin-babel": "^2.7.1",
    "webpack": "^2.6.1",
    "webpack-dev-server": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "f3449f07a7df1c1e462ba86158a327071fd5c063",
    "tarball": "https://registry.npmjs.org/better-scroll/-/better-scroll-0.4.0.tgz"
  },
  "gitHead": "9c3b38b06b1705bf81dbabbac3c74ea220af3050",
  "homepage": "https://github.com/ustbhuangyi/better-scroll",
  "keywords": [
    "scroll",
    "javascript",
    "ios"
  ],
  "licenses": "MIT",
  "main": "dist/bscroll.js",
  "maintainers": [
    {
      "name": "ustbhuangyi",
      "email": "ustbhuangyi@gmail.com"
    }
  ],
  "name": "better-scroll",
  "optionalDependencies": {},
  "readme": "# better-scroll\n[![npm](https://img.shields.io/npm/v/better-scroll.svg?style=flat-square)](https://www.npmjs.com/package/better-scroll)\n\ninspired by iscroll, and it has a better scroll perfermance https://ustbhuangyi.github.io/better-scroll/\n\n## 立即使用\n\n```HTML\n<body>\n  <div id=\"wrapper\">\n    <ul>\n\t   <li>...</li>\n\t   <li>...</li>\n\t   ...\n    </ul>\n  </div>\n<script type=\"text/javascript\" src=\"better-scroll.js\"></script>\n<script type=\"text/javascript\">\n  new BScroll(document.getElementById('wrapper'));\n</script>\n</body>\n```\n\n搞定 !\n\n## 通过npm引入\n\n安装better-scroll\n\n```shell\nnpm install better-scroll\n```\n引入better-scroll\n\n```javascript\nimport BScroll from 'better-scroll'\n```\n\n>如果不支持import, 请使用\n\n```javascript\nvar BScroll = require('better-scroll')\n```\n\n## DEMO\nbetter-scroll 的源码是基于 Webpack 构建的\n\n首先，clone项目源码\n\n```shell\ngit clone https://github.com/ustbhuangyi/better-scroll.git\n```\n\n安装依赖\n\n```shell\ncd better-scroll\nnpm install\n```\n\n测试demo页\n\n```shell\nnpm run dev\n```\n\n打开浏览器访问如下地址, 查看效果\n\n> localhost:9090\n\n## Options 参数\n\nExample:\n\n```javascript\nlet scroll = new BScroll(document.getElementById('wrapper'), {\n  startX: 0,\n  startY: 0\n})\n```\n\nOptions List:\n\n- startX: `0` 开始的X轴位置\n- startY: `0` 开始的Y轴位置\n- scrollY: `true` 滚动方向为 Y 轴\n- scrollX: 'true' 滚动方向为 X 轴\n- click: `true` 是否派发click事件\n- directionLockThreshold: `5`\n- momentum: `true` 当快速滑动时是否开启滑动惯性\n- bounce: `true` 是否启用回弹动画效果\n- selectedIndex: `0` wheel 为 true 时有效，表示被选中的 wheel 索引\n- rotate: `25` wheel 为 true 时有效，表示被选中的 wheel 每一层的旋转角度\n- wheel: `false` 该属性是给 picker 组件使用的，普通的列表滚动不需要配置\n- snap: `false` 该属性是给 slider 组件使用的，普通的列表滚动不需要配置\n- snapLoop: `false` 是否可以无缝循环轮播\n- snapThreshold: `0.1` 用手指滑动时页面可切换的阈值，大于这个阈值可以滑动的下一页\n- snapSpeed: `400`, 轮播图切换的动画时间\n- swipeTime: `2500` swipe 持续时间\n- bounceTime: `700` 弹力动画持续的毫秒数\n- adjustTime: `400` wheel 为 true 有用，调整停留位置的时间\n- swipeBounceTime: `1200` swipe 回弹 时间\n- deceleration: `0.001` 滚动动量减速越大越快，建议不大于0.01\n- momentumLimitTime: `300` 符合惯性拖动的最大时间\n- momentumLimitDistance: `15` 符合惯性拖动的最小拖动距离\n- resizePolling: `60` 重新调整窗口大小时，重新计算better-scroll的时间间隔\n- preventDefault: `true` 是否阻止默认事件\n- preventDefaultException: `{ tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ }` 阻止默认事件的例外配置\n- HWCompositing: `true` 是否启用硬件加速\n- useTransition: `true` 是否使用CSS3的Transition属性\n- useTransform: `true` 是否使用CSS3的Transform属性\n- probeType: `1` 会截流,只有在滚动结束的时候派发一个 scroll 事件。`2`在手指 move 的时候也会实时派发 scroll 事件，不会截流。 `3`除了手指 move 的时候派发scroll事件，在 swipe（手指迅速滑动一小段距离）的情况下，列表会有一个长距离的滚动动画，这个滚动的动画过程中也会实时派发滚动事件\n\n## Events 事件\n\nExample:\n\n```javascript\nlet scroll = new BScroll(document.getElementById('wrapper'),{\n   probeType: 3\n})\n\nscroll.on('scroll', (pos) => {\n  console.log(pos.x + '~' + pos.y)\n  ...\n})\n```\n\nEvents 列表\n\n- beforeScrollStart - 滚动开始之前触发\n- scrollStart - 滚动开始时触发\n- scroll - 滚动时触发\n- scrollCancel - 取消滚动时触发\n- scrollEnd - 滚动结束时触发\n- touchend - 手指移开屏幕时触发\n- flick - 轻拂时触发\n- refresh - 当 better-scroll 刷新时触发\n- destroy - 销毁 better-scroll 实例时触发\n\n\n## 方法\n\n- scrollTo(x, y, time, easing) \n\n滚动到某个位置，x,y 代表坐标，time 表示动画时间，easing 表示缓动函数\n\nExample:\n\n```javascript\nlet scroll = new BScroll(document.getElementById('wrapper'))\nscroll.scrollTo(0, 500)\n...\n```\n- scrollToElement(el, time, offsetX, offsetY, easing) \n\n滚动到某个元素，el（必填）表示 dom 元素，time 表示动画时间，offsetX 和 offsetY 表示坐标偏移量，easing 表示缓动函数\n    \n  \n- refresh() \n\n强制 scroll 重新计算，当 better-scroll 中的元素发生变化的时候调用此方法。\n\n- getCurrentPage() \n\n当 snap 为 true 时，获取滚动的当前页，返回的对象结构为 {x, y, pageX, pageY}，其中 x,y 代表滚动横向和纵向的位置；pageX，pageY 表示横向和纵向的页面索引\n\n- goToPage(x, y, time, easing)\n\n当 snap 为 true，滚动到对应的页面，x 表示横向页面索引，y 表示纵向页面索引， time 表示动画，easing 表示缓动函数\n\n- enable() \n\n启用 better-scroll，默认开启\n\n- disable()\n\n禁用 better-scroll\n\n- destroy() \n\n销毁 better-scroll，解绑事件\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/ustbhuangyi/better-scroll.git"
  },
  "scripts": {
    "build": "node build/build.js",
    "dev": "webpack-dev-server --port 9090 --inline --hot --content-base ./demo --host 0.0.0.0"
  },
  "version": "0.4.0"
}
